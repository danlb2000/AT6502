;  filename CST.MAC
;------------------
;  selftest

MN.ST:

;  test both pokeys
;  POKEY test
~LDA #0
~LDX #0F
~BEGIN
~STA POKEY0(X)
~STA POKEY1(X)
~DEX
~MIEND

~LDA #7			;"FAST POT"
~STA POKCT0
~STA POKCT1

~LDY #7F		;WAIT FOR 80 VBLANKS
~LDX #0
~TYA
~LSR
~STA POKEY0(X)		;MAKE WOOP
~ADD #20
~STA POKEY1(X)

~LDA I,0A8
~STA POKEY0+1	; audio control
~STA POKEY1+1

~BEGIN
~BEGIN
~LDA HW.VBL
~AND #MA.VBL
~EQEND
~BEGIN
~LDA HW.VBL
~AND #MA.VBL
~NEEND
~TYA
~LSR
~STA POKEY0(X)
~ADD #20
~STA POKEY1(X)

~TYA
~AND #1F		;  test each channel
~IFEQ
~LDA #0
~STA 1+POKEY0(X)	;  sound off old channel
~STA 1+POKEY1(X)
~INX
~INX
~LDA #0A8
~STA 1+POKEY0(X)	;  on new channel
~STA 1+POKEY1(X)
~ENDIF

~STA HW.WDC		;WOOF
~DEY
~EQEND
~TYA
~STA POKEY0+1(X)		;SOUND OFF
~STA POKEY1+1(X)

;  clear zero page
;	LDY #0
;	TYA
~BEGIN
~STA 0(Y)
~INY
~EQEND
;  keep (A) zero

;	.SBTTL	RAM TEST
;ENTRY: Z PAGE CLEARED

~TAX			; (X) indicates zero page
~LDY I,3			;skip bit mode, hscroll
~BEGIN
~LDA 0(Y)
~BNE RAMERR
~LDA #0FF		;USE GALLOPING FF
~STA 0(Y)			;BIT TEST
~EOR 0(Y)
~BNE RAMERR
~STA 0(Y)			;CLEAR IT
~INY
~EQEND

~STA HW.WDC			;  WOOF

~LDX I,1			;rest OF RAM1
~LDY I,0
~TYA
~BEGIN
~BEGIN
~STA TEMP1
~STX TEMP1+1
~STA NY,TEMP1
~INY
~EQEND
~STA HW.WDC		;WOOF
~INX
~CPX #90		;END OF MEMORY
~EQEND

~LDX #1	; test cleared memory
~TAY	;  0
~BEGIN
~STY TEMP1
~STX TEMP1+1
~BEGIN
~LDA NY,TEMP1		;STILL ZERO?
~BNE RAMERR
~LDA I,0FF
~STA NY,TEMP1
~EOR NY,TEMP1
~BNE RAMERR
~STA NY,TEMP1
~INY			;NEXT BYTE
~EQEND
~STA HW.WDC		;WOOF
~INX			;NEXT PAGE
~CPX #90
~EQEND			;ALL static and dynamic RAM OK
~JMP RAMOK		;GO TEST BITMODE


;	.SBTTL		RAM ERROR REPORT

;ENTRY:	(ACC)=BAD BYTE
;	(Y)= low address
;	(X)= high address
RAMERR:
~CPX #80
~IFCC		;  dynamic RAM
~TAX
~TYA
~AND #1
~IFEQ		;  even address
~TXA
~AND #0F
~IFEQ
~LDA #0F1	; high nibble 4h,  four high beeps
~ELSE
~LDA #0E1	; low nibble  4j,  three high beeps
~ENDIF
~ELSE
~TXA
~AND #0F
~IFEQ
~LDA #081	;  high nibble 4f,  two high beeps
~ELSE
~LDA #0C1	;  low nibble  4e,  one high beep
~ENDIF
~ENDIF
~ELSE		;  static RAM
~TYA
~AND #1
~IFEQ
~LDA #0F9	;  even at 6B,  five high beeps
~ELSE
~LDA #0FD	;  odd at  6D,  six high beeps
~ENDIF
~ENDIF

;  generate seven beeps
BEEPGN:

~BEGIN
~LDY I,0A0		;GOOD SOUND
~ASL
~IFCS
~LDY I,10		;BAD SOUND
~ENDIF
~TAX
~STY POKEY0
~LDY I,0A8
~STY POKEY0+1
~LDY I,20
~BEGIN
~BEGIN			;WAIT FOR VBLANK-NOT
~LDA HW.VBL
~AND #MA.VBL
~EQEND
~BEGIN			;WAIT FOR VBLANK
~LDA HW.VBL
~AND #MA.VBL
~NEEND
~STA HW.WDC		;WOOF
~DEY
~EQEND
~STY POKEY0+1		;TURN OFF SOUND
~LDY I,14
~BEGIN
~BEGIN			;DELAY
~LDA HW.VBL
~AND #MA.VBL
~EQEND
~BEGIN
~LDA HW.VBL
~AND #MA.VBL
~NEEND
~STA HW.WDC		;WOOF
~DEY
~EQEND
~TXA
~CMP #80
~EQEND

10$:	BEQ 10$			;  doit doggie

RAMOK:
; BIT MODE TEST
;
BITEST:	LDX I,0			;SET UP FIRST COORDINATE
~LDY I,18
~BEGIN
~BEGIN
~STX XB
~STY YB
~LDA VB			;SEE IF PIXEL CLEAR
~AND I,0F0
~BNE BITERR
~LDA I,00F		;TEST PIXEL
~STA VB
~EOR VB
~AND I,0F0
~BNE BITERR
~STA VB			;CLEAR IT
~INX			;NEXT PIXEL
~EQEND
~STA WCHDOG		;woof
~INY			;NEXT LINE
~CPY I,0FF		;END OF SCREEN?
~EQEND


;  bitmode OK
~JMP BITOK
BITERR:
~LDA #0A1
~JMP BEEPGN

BITOK:
;.REPT 0
;;  autoinc test
;;  turn on both xinc yinc
;~TRAI 0 HW.AX
;~STA    HW.AY
;; already initialized for decrementing
;
;~LDA #80
;~STA XB
;~STA YB
;~LDA #0FF
;
;
;~STA VB
;~STA VB
;
;~LDA #7F
;~STA XB
;~STA YB
;
;~LDA VB
;~AND #0F0
;~CMP #0F0
;~BEQ AUTOK
;~LDA #91
;~JMP BEEPGN
;
;AUTOK:
;;  turn off autoinc
;~TRAI 0FF HW.AX
;~STA	 HW.AY
;
;~.ENDM
;
;~LDX #0FE
;~TXS		; setup stack
;
;
;
;~LDA #28
;~JSR MS.DRW	;  RAM ok message
;
;~STA HW.WDC
;
;~JSR EETST0	;  RAM portion of EEROM
;~IFNE
;~AND #0F0
;~IFNE
;~LDA #2C	; PC location 4A  high nib
;~ELSE
;~LDA #2D	; PC location 4B  high nib
;~ENDIF
;~JSR MS.DRW	;  EEROM failed
;10$:	 JMP 10$	;  do it doggie
;~ENDIF
;
;
;;  ROM test,  must be after 0E000
;;
;PROG	=0A000			;START OF PROGRAM
;NPROM1	=3			;NUMBER OF 2764's
;NPROM2	=2
;
;ROMTST:
;~TRAI 0 1+TEMP2		;  checksum counter
;~STA   HW.BSL		;  bank zero ROM test
;~LDX #20*NPROM1-1
;~JSR ROMTS1
;
;~TRAI 0FF HW.BSL		;  bank one ROM test
;~LDX #20*NPROM2-1
;~JSR ROMTS1
;~TRAI 0 HW.BSL
;
;~JMP GOTCHK
;
;ROMTS1:
;~TR16AI PROG TEMP1
;~LDA I,0FF		;SEED
;~BEGIN
;~LDY I,0			;INDEX
;~BEGIN
;~EOR NY,TEMP1		;LONGITUDINAL PARITY
;~INY
;~EQEND
;~STA TEMP2		;  save checksum
;~TXA
;~AND I,1F		;END OF PROM?
;~IFEQ
;~LDA TEMP2
;~LDY 1+TEMP2
;~STA TEMP3(Y)
;~INC 1+TEMP2
;~LDA I,0FF		;NEW SEED
;~STA TEMP2
;~ENDIF
;~INC TEMP1+1		;NEXT PAGE
;~STA HW.WDC		; WOOF
;~LDA TEMP2
;~DEX
;~MIEND
;~RTS
;
;GOTCHK:
;~TRAI 0 1+TEMP2
;~BEGIN
;~LDY 1+TEMP2
;~LDA TEMP3(Y)
;~SUB #1
;~CMP 1+TEMP2
;~BNE 10$
;~INC 1+TEMP2
;~LDA 1+TEMP2
;~CMP #5
;~CSEND
;~;  test passed
;~LDA #29		;  ROM OK message
;~JSR MS.DRW
;~JMP MOREST
;10$:			;  ROM bad
;~LDA #17
;~JSR MS.DRW
;~TRAI 070 AL.Y
;~TRAI 0 1+TEMP2
;~BEGIN
;~LDA I,020+<26.*6>
;~STA AL.X
;~STA SC.FNZ	;  no zero suppress
;~LDY 1+TEMP2
;~LDA TEMP3(Y)
;~JSR DG.2HT
;~ADAI 8 AL.Y
;~INC 1+TEMP2
;~LDA 1+TEMP2
;~STA HW.WDC		; WOOF
;~CMP #5
;~CSEND
;
;~;  delay some
;~LDY #3
;~20$:
;~BEGIN
;~LDA HW.VBL
;~AND #MA.VBL
;~EQEND
;~BEGIN
;~LDA HW.VBL
;~AND #MA.VBL
;~NEEND
;~STA HW.WDC
;~DEX
;~BNE 20$
;~DEY
;~BNE 20$
;
;17$:	BCS 17$			;  let woof
;
;~JMP MOREST
;;	.BYTE 0F0,0D0		;  BEQ,BNE opcodes
;~.BYTE 0F0
;
;~.SBTTL	EETST0-test RAM portion of EEROM
;;
;;	A GALLOPING ONES TEST IS PERFORMED ON THE RAM PORTION OF THE
;;	EEROM.  AFTER WRITING A VALUE THE COMPLEMENT IS ALSO WRITTEN.
;;
;;exit	(Z)=non-zero set if RAM error occured
;;	(X)=index of failure
;;	(A)=difference in error
;;uses	A,X,Y,(EEBUF,EEBUF+255.)
;EETST0:	LDX I,0
;5$:	LDA X,EEROM		;copy RAM to scratch area
;~STA X,EEBUF
;~DEX
;~BNE 5$
;~TXA
;10$:	STA X,EEROM		;ZERO RAM
;~INX
;~BNE 10$
;20$:	LDA X,EEROM
;~BNE 70$			;WE HAVE A FAILURE
;~LDA I,11
;30$:	STA X,EEROM
;~TAY
;~EOR X,EEROM
;~BNE 70$			;WE HAVE A FAILURE
;~TYA
;~EOR I,0FF
;~STA X,EEROM		;WRITE MORE THAN 1 BIT
;~EOR X,EEROM		;THIS CAN CAUSE SOME RAM'S TO FAIL
;~BNE 70$			;RAM FAILURE
;~TYA
;~ASL
;~BCC 30$			;NEXT BIT PATTERN
;~STA HW.WDC
;~INX
;~BNE 20$
;40$:	LDA X,EEBUF		;copy RAM contents back
;~STA X,EEROM
;~DEX
;~BNE 40$
;70$:	RTS
;
;
